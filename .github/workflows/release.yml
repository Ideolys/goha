name: Upload assets

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node_version: ['14.17.3']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Dependencies
        run: npm install
      
      - name: Get the version without /refs/tags/
        run: echo "GOHA_VERSION=$(echo ${GITHUB_REF/refs\/tags\//})" >> $GITHUB_ENV

      - name: Get the filenmae
        run: echo "GOHA_FILENAME=$(echo goha-linux-${GOHA_VERSION//./-})" >> $GITHUB_ENV

      - name: Install pkg
        run: sudo npm i -g pkg@5.3.0
      
      - name: Build
        run:  pkg -t node14-linux-x64 -o ./build/${{ env.GOHA_FILENAME }} .
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/${{ env.GOHA_FILENAME }}
          asset_name: ${{ env.GOHA_FILENAME }}
          asset_content_type: application/octet-stream
